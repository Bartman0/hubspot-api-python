# coding: utf-8

"""
    Invoices

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictInt, StrictStr
from typing import List, Optional
from typing_extensions import Annotated
from hubspot.crm.invoices.models.collection_response_simple_public_object_with_associations_forward_paging import CollectionResponseSimplePublicObjectWithAssociationsForwardPaging
from hubspot.crm.invoices.models.simple_public_object_with_associations import SimplePublicObjectWithAssociations

from hubspot.crm.invoices.api_client import ApiClient, RequestSerialized
from hubspot.crm.invoices.api_response import ApiResponse
from hubspot.crm.invoices.rest import RESTResponseType


class BasicApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_crm_v3_objects_invoices(
        self,
        limit: Annotated[Optional[StrictInt], Field(description="The maximum number of results to display per page.")] = None,
        after: Annotated[Optional[StrictStr], Field(description="The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.")] = None,
        properties: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        properties_with_history: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.")] = None,
        associations: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.")] = None,
        archived: Annotated[Optional[StrictBool], Field(description="Whether to return only results that have been archived.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CollectionResponseSimplePublicObjectWithAssociationsForwardPaging:
        """List

        Read a page of invoices. Control what is returned via the `properties` query param.

        :param limit: The maximum number of results to display per page.
        :type limit: int
        :param after: The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
        :type after: str
        :param properties: A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties: List[str]
        :param properties_with_history: A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.
        :type properties_with_history: List[str]
        :param associations: A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.
        :type associations: List[str]
        :param archived: Whether to return only results that have been archived.
        :type archived: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_crm_v3_objects_invoices_serialize(
            limit=limit,
            after=after,
            properties=properties,
            properties_with_history=properties_with_history,
            associations=associations,
            archived=archived,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_crm_v3_objects_invoices_with_http_info(
        self,
        limit: Annotated[Optional[StrictInt], Field(description="The maximum number of results to display per page.")] = None,
        after: Annotated[Optional[StrictStr], Field(description="The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.")] = None,
        properties: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        properties_with_history: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.")] = None,
        associations: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.")] = None,
        archived: Annotated[Optional[StrictBool], Field(description="Whether to return only results that have been archived.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CollectionResponseSimplePublicObjectWithAssociationsForwardPaging]:
        """List

        Read a page of invoices. Control what is returned via the `properties` query param.

        :param limit: The maximum number of results to display per page.
        :type limit: int
        :param after: The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
        :type after: str
        :param properties: A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties: List[str]
        :param properties_with_history: A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.
        :type properties_with_history: List[str]
        :param associations: A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.
        :type associations: List[str]
        :param archived: Whether to return only results that have been archived.
        :type archived: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_crm_v3_objects_invoices_serialize(
            limit=limit,
            after=after,
            properties=properties,
            properties_with_history=properties_with_history,
            associations=associations,
            archived=archived,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_crm_v3_objects_invoices_without_preload_content(
        self,
        limit: Annotated[Optional[StrictInt], Field(description="The maximum number of results to display per page.")] = None,
        after: Annotated[Optional[StrictStr], Field(description="The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.")] = None,
        properties: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        properties_with_history: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.")] = None,
        associations: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.")] = None,
        archived: Annotated[Optional[StrictBool], Field(description="Whether to return only results that have been archived.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List

        Read a page of invoices. Control what is returned via the `properties` query param.

        :param limit: The maximum number of results to display per page.
        :type limit: int
        :param after: The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
        :type after: str
        :param properties: A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties: List[str]
        :param properties_with_history: A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.
        :type properties_with_history: List[str]
        :param associations: A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.
        :type associations: List[str]
        :param archived: Whether to return only results that have been archived.
        :type archived: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_crm_v3_objects_invoices_serialize(
            limit=limit,
            after=after,
            properties=properties,
            properties_with_history=properties_with_history,
            associations=associations,
            archived=archived,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_crm_v3_objects_invoices_serialize(
        self,
        limit,
        after,
        properties,
        properties_with_history,
        associations,
        archived,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'properties': 'multi',
            'propertiesWithHistory': 'multi',
            'associations': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if after is not None:
            
            _query_params.append(('after', after))
            
        if properties is not None:
            
            _query_params.append(('properties', properties))
            
        if properties_with_history is not None:
            
            _query_params.append(('propertiesWithHistory', properties_with_history))
            
        if associations is not None:
            
            _query_params.append(('associations', associations))
            
        if archived is not None:
            
            _query_params.append(('archived', archived))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    '*/*'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2', 
            'private_apps'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/crm/v3/objects/invoices',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_crm_v3_objects_invoices_invoice_id(
        self,
        invoice_id: StrictStr,
        properties: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        properties_with_history: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        associations: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.")] = None,
        archived: Annotated[Optional[StrictBool], Field(description="Whether to return only results that have been archived.")] = None,
        id_property: Annotated[Optional[StrictStr], Field(description="The name of a property whose values are unique for this object type")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SimplePublicObjectWithAssociations:
        """Read

        Read an Object identified by `{invoiceId}`. `{invoiceId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.

        :param invoice_id: (required)
        :type invoice_id: str
        :param properties: A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties: List[str]
        :param properties_with_history: A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties_with_history: List[str]
        :param associations: A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.
        :type associations: List[str]
        :param archived: Whether to return only results that have been archived.
        :type archived: bool
        :param id_property: The name of a property whose values are unique for this object type
        :type id_property: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_crm_v3_objects_invoices_invoice_id_serialize(
            invoice_id=invoice_id,
            properties=properties,
            properties_with_history=properties_with_history,
            associations=associations,
            archived=archived,
            id_property=id_property,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SimplePublicObjectWithAssociations",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_crm_v3_objects_invoices_invoice_id_with_http_info(
        self,
        invoice_id: StrictStr,
        properties: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        properties_with_history: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        associations: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.")] = None,
        archived: Annotated[Optional[StrictBool], Field(description="Whether to return only results that have been archived.")] = None,
        id_property: Annotated[Optional[StrictStr], Field(description="The name of a property whose values are unique for this object type")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SimplePublicObjectWithAssociations]:
        """Read

        Read an Object identified by `{invoiceId}`. `{invoiceId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.

        :param invoice_id: (required)
        :type invoice_id: str
        :param properties: A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties: List[str]
        :param properties_with_history: A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties_with_history: List[str]
        :param associations: A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.
        :type associations: List[str]
        :param archived: Whether to return only results that have been archived.
        :type archived: bool
        :param id_property: The name of a property whose values are unique for this object type
        :type id_property: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_crm_v3_objects_invoices_invoice_id_serialize(
            invoice_id=invoice_id,
            properties=properties,
            properties_with_history=properties_with_history,
            associations=associations,
            archived=archived,
            id_property=id_property,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SimplePublicObjectWithAssociations",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_crm_v3_objects_invoices_invoice_id_without_preload_content(
        self,
        invoice_id: StrictStr,
        properties: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        properties_with_history: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.")] = None,
        associations: Annotated[Optional[List[StrictStr]], Field(description="A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.")] = None,
        archived: Annotated[Optional[StrictBool], Field(description="Whether to return only results that have been archived.")] = None,
        id_property: Annotated[Optional[StrictStr], Field(description="The name of a property whose values are unique for this object type")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Read

        Read an Object identified by `{invoiceId}`. `{invoiceId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.

        :param invoice_id: (required)
        :type invoice_id: str
        :param properties: A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties: List[str]
        :param properties_with_history: A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.
        :type properties_with_history: List[str]
        :param associations: A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.
        :type associations: List[str]
        :param archived: Whether to return only results that have been archived.
        :type archived: bool
        :param id_property: The name of a property whose values are unique for this object type
        :type id_property: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_crm_v3_objects_invoices_invoice_id_serialize(
            invoice_id=invoice_id,
            properties=properties,
            properties_with_history=properties_with_history,
            associations=associations,
            archived=archived,
            id_property=id_property,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SimplePublicObjectWithAssociations",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_crm_v3_objects_invoices_invoice_id_serialize(
        self,
        invoice_id,
        properties,
        properties_with_history,
        associations,
        archived,
        id_property,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'properties': 'multi',
            'propertiesWithHistory': 'multi',
            'associations': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if invoice_id is not None:
            _path_params['invoiceId'] = invoice_id
        # process the query parameters
        if properties is not None:
            
            _query_params.append(('properties', properties))
            
        if properties_with_history is not None:
            
            _query_params.append(('propertiesWithHistory', properties_with_history))
            
        if associations is not None:
            
            _query_params.append(('associations', associations))
            
        if archived is not None:
            
            _query_params.append(('archived', archived))
            
        if id_property is not None:
            
            _query_params.append(('idProperty', id_property))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    '*/*'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2', 
            'private_apps'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/crm/v3/objects/invoices/{invoiceId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


